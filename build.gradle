plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = 'dev.venclus'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url "https://storehouse.okaeri.eu/repository/maven-public/" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    implementation("com.github.cryptomorin:XSeries:11.2.1")
    implementation 'eu.okaeri:okaeri-configs-yaml-bukkit:5.0.5'
    implementation 'eu.okaeri:okaeri-configs-serdes-bukkit:5.0.5'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation fileTree(dir: 'impl-libs', includes: ['*.jar'])
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

shadowJar {
    archiveFileName = "SpeedAnvil-v${version}.jar"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = targetJavaVersion.toString()
        freeCompilerArgs += ['-Xjvm-default=all']
    }
}
